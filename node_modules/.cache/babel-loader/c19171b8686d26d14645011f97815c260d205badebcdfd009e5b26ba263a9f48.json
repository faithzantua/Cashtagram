{"ast":null,"code":"var _jsxFileName = \"/Users/faithzantua/cashtagram-web-app/src/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { useNavigate } from \"react-router-dom\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport db from './firebase'; // Import db from firebase.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst colors = {\n  Housing: \"#FFB3BA\",\n  Utilities: \"#FFD3BA\",\n  Transportation: \"#FFFFBA\",\n  Food: \"#BAFFC9\",\n  Healthcare: \"#BAE1FF\",\n  Clothes: \"#BAC2FF\",\n  \"Personal Care\": \"#D9BAFF\",\n  Entertainment: \"#FFBACD\",\n  Others: \"#689534\"\n};\nconst HomePage = () => {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState(months[new Date().getMonth()]);\n  const [expenses, setExpenses] = useState([]);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      const querySnapshot = await getDocs(collection(db, \"expenses\"));\n      const data = querySnapshot.docs.map(doc => doc.data());\n      setExpenses(data);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Calculate total expenses whenever expenses change\n    const total = expenses.reduce((acc, expense) => acc + expense.amount, 0);\n    setTotalExpenses(total);\n  }, [expenses]);\n  const handleMonthChange = e => {\n    setSelectedMonth(e.target.value);\n  };\n  const handleAddExpense = () => {\n    navigate(\"/add\");\n  };\n  const options = {\n    title: selectedMonth,\n    pieHole: 0.4,\n    pieSliceText: \"label\",\n    legend: \"none\",\n    pieSliceTextStyle: {\n      color: \"black\"\n    },\n    pieStartAngle: 100,\n    tooltip: {\n      isHtml: true\n    },\n    chartArea: {\n      left: \"5%\",\n      top: \"5%\",\n      width: \"45%\",\n      // Adjusted to make space for legend\n      height: \"90%\"\n    },\n    slices: expenses.map((_, index) => ({\n      color: colors[expenses[index].category] || \"gray\"\n    }))\n  };\n  const chartData = [[\"Expense\", \"Amount\", {\n    role: \"style\"\n  }, {\n    role: \"tooltip\",\n    type: \"string\",\n    p: {\n      html: true\n    }\n  }], ...expenses.map((expense, index) => {\n    const color = colors[expense.category] || \"gray\"; // Default color if category not found\n    return [expense.description, expense.amount, color, `<b>$${expense.amount.toFixed(2)}</b>`];\n  })];\n  const yearData = [[\"Year\", \"Visitations\", {\n    role: \"style\"\n  }], [\"2010\", 10, \"color: gray\"], [\"2020\", 14, \"color: #76A7FA\"], [\"2030\", 16, \"color: blue\"], [\"2040\", 22, \"stroke-color: #703593; stroke-width: 4; fill-color: #C5A5CF\"], [\"2050\", 28, \"stroke-color: #871B47; stroke-opacity: 0.6; stroke-width: 8; fill-color: #BC5679; fill-opacity: 0.2\"]];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedMonth,\n        onChange: handleMonthChange,\n        children: months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: month,\n          children: month\n        }, month, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddExpense,\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        className: \"chart\",\n        chartType: \"BarChart\",\n        data: yearData,\n        options: {\n          backgroundColor: \"red\",\n          chart: {\n            title: \"Spend Uplift\"\n          },\n          colors: [\"#FB7A21\"]\n        },\n        width: \"100%\",\n        height: \"400px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-expenses\",\n        children: [\"Total Expenses: \", totalExpenses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this);\n};\n_s(HomePage, \"7oPv3/YBc2sPAKsaT7r2bOtUgvM=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Chart","useNavigate","collection","getDocs","db","jsxDEV","_jsxDEV","months","colors","Housing","Utilities","Transportation","Food","Healthcare","Clothes","Entertainment","Others","HomePage","_s","selectedMonth","setSelectedMonth","Date","getMonth","expenses","setExpenses","totalExpenses","setTotalExpenses","navigate","fetchData","querySnapshot","data","docs","map","doc","total","reduce","acc","expense","amount","handleMonthChange","e","target","value","handleAddExpense","options","title","pieHole","pieSliceText","legend","pieSliceTextStyle","color","pieStartAngle","tooltip","isHtml","chartArea","left","top","width","height","slices","_","index","category","chartData","role","type","p","html","description","toFixed","yearData","className","children","onChange","month","fileName","_jsxFileName","lineNumber","columnNumber","onClick","chartType","backgroundColor","chart","_c","$RefreshReg$"],"sources":["/Users/faithzantua/cashtagram-web-app/src/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { useNavigate } from \"react-router-dom\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport db from './firebase'; // Import db from firebase.js\n\nconst months = [\n  \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst colors = {\n  Housing: \"#FFB3BA\",\n  Utilities: \"#FFD3BA\",\n  Transportation: \"#FFFFBA\",\n  Food: \"#BAFFC9\",\n  Healthcare: \"#BAE1FF\",\n  Clothes: \"#BAC2FF\",\n  \"Personal Care\": \"#D9BAFF\",\n  Entertainment: \"#FFBACD\",\n  Others: \"#689534\",\n};\n\nconst HomePage = () => {\n    const [selectedMonth, setSelectedMonth] = useState(months[new Date().getMonth()]);\n    const [expenses, setExpenses] = useState([]);\n    const [totalExpenses, setTotalExpenses] = useState(0);\n    const navigate = useNavigate();\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        const querySnapshot = await getDocs(collection(db, \"expenses\"));\n        const data = querySnapshot.docs.map(doc => doc.data());\n        setExpenses(data);\n      };\n      fetchData();\n    }, []);\n  \n    useEffect(() => {\n      // Calculate total expenses whenever expenses change\n      const total = expenses.reduce((acc, expense) => acc + expense.amount, 0);\n      setTotalExpenses(total);\n    }, [expenses]);\n  \n    const handleMonthChange = (e) => {\n      setSelectedMonth(e.target.value);\n    };\n  \n    const handleAddExpense = () => {\n      navigate(\"/add\");\n    };\n  \n    const options = {\n        title: selectedMonth,\n        pieHole: 0.4,\n        pieSliceText: \"label\",\n        legend: \"none\",\n        pieSliceTextStyle: {\n          color: \"black\",\n        },\n        pieStartAngle: 100,\n        tooltip: { isHtml: true },\n        chartArea: {\n          left: \"5%\",\n          top: \"5%\",\n          width: \"45%\", // Adjusted to make space for legend\n          height: \"90%\",\n        },\n        slices: expenses.map((_, index) => ({ color: colors[expenses[index].category] || \"gray\" })),\n      };\n\n    const chartData = [\n      [\"Expense\", \"Amount\", { role: \"style\" }, { role: \"tooltip\", type: \"string\", p: { html: true } }],\n      ...expenses.map((expense, index) => {\n        const color = colors[expense.category] || \"gray\"; // Default color if category not found\n        return [expense.description, expense.amount, color, `<b>$${expense.amount.toFixed(2)}</b>`];\n      }),\n    ];\n\n    const yearData = [\n      [\"Year\", \"Visitations\", { role: \"style\" }],\n      [\"2010\", 10, \"color: gray\"],\n      [\"2020\", 14, \"color: #76A7FA\"],\n      [\"2030\", 16, \"color: blue\"],\n      [\"2040\", 22, \"stroke-color: #703593; stroke-width: 4; fill-color: #C5A5CF\"],\n      [\n        \"2050\",\n        28,\n        \"stroke-color: #871B47; stroke-opacity: 0.6; stroke-width: 8; fill-color: #BC5679; fill-opacity: 0.2\"\n      ]\n    ];\n\n    return (\n      <div className=\"homepage-container\">\n        <div className=\"left-column\">\n          <select value={selectedMonth} onChange={handleMonthChange}>\n            {months.map((month) => (\n              <option key={month} value={month}>{month}</option>\n            ))}\n          </select>\n          <button onClick={handleAddExpense}>Add Expense</button>\n          <Chart\n            className=\"chart\"\n            chartType=\"BarChart\"\n            data={yearData}\n            options={{\n              backgroundColor: \"red\",\n              chart: {\n                title: \"Spend Uplift\"\n              },\n              colors: [\"#FB7A21\"]\n            }}\n            width={\"100%\"}\n            height={\"400px\"}\n          />\n          <div className=\"total-expenses\">\n            Total Expenses: {totalExpenses}\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n  export default HomePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}