{"ast":null,"code":"var _jsxFileName = \"/Users/faithzantua/cashtagram-web-app/src/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState(months[new Date().getMonth()]);\n  const [expenses, setExpenses] = useState([]);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      const querySnapshot = await getDocs(collection(db, \"expenses\"));\n      const data = querySnapshot.docs.map(doc => doc.data());\n      setExpenses(data);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    // Calculate total expenses whenever expenses change\n    const total = expenses.reduce((acc, expense) => acc + expense.amount, 0);\n    setTotalExpenses(total);\n  }, [expenses]);\n  const handleMonthChange = e => {\n    setSelectedMonth(e.target.value);\n  };\n  const handleAddExpense = () => {\n    navigate(\"/add\");\n  };\n  const data = [[\"Expense\", \"Amount\", {\n    role: \"style\"\n  }], ...expenses.map((expense, index) => {\n    const color = colors[expense.category] || \"gray\"; // Default color if category not found\n    return [expense.description, expense.amount, color];\n  })];\n  const options = {\n    title: selectedMonth,\n    pieHole: 0.4,\n    pieSliceText: \"label\",\n    legend: \"none\",\n    pieSliceTextStyle: {\n      color: \"black\"\n    },\n    pieStartAngle: 100,\n    tooltip: {\n      trigger: \"none\"\n    },\n    chartArea: {\n      left: \"5%\",\n      top: \"5%\",\n      width: \"90%\",\n      height: \"90%\"\n    },\n    slices: expenses.map((_, index) => ({\n      color: colors[expenses[index].category] || \"gray\"\n    }))\n  };\n  const monthOptions = months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: month,\n    children: month\n  }, month, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedMonth,\n      onChange: handleMonthChange,\n      children: monthOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddExpense,\n      children: \"Add Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: \"PieChart\",\n      data: data,\n      options: options,\n      width: \"100%\",\n      height: \"400px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        textAlign: \"center\"\n      },\n      children: [\"Total Expenses: \", totalExpenses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n};\n_s(HomePage, \"7oPv3/YBc2sPAKsaT7r2bOtUgvM=\", true);\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["HomePage","_s","selectedMonth","setSelectedMonth","useState","months","Date","getMonth","expenses","setExpenses","totalExpenses","setTotalExpenses","navigate","useNavigate","useEffect","fetchData","querySnapshot","getDocs","collection","db","data","docs","map","doc","total","reduce","acc","expense","amount","handleMonthChange","e","target","value","handleAddExpense","role","index","color","colors","category","description","options","title","pieHole","pieSliceText","legend","pieSliceTextStyle","pieStartAngle","tooltip","trigger","chartArea","left","top","width","height","slices","_","monthOptions","month","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","Chart","chartType","style","position","transform","textAlign","_c","$RefreshReg$"],"sources":["/Users/faithzantua/cashtagram-web-app/src/HomePage.jsx"],"sourcesContent":["const HomePage = () => {\n    const [selectedMonth, setSelectedMonth] = useState(months[new Date().getMonth()]);\n    const [expenses, setExpenses] = useState([]);\n    const [totalExpenses, setTotalExpenses] = useState(0);\n    const navigate = useNavigate();\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        const querySnapshot = await getDocs(collection(db, \"expenses\"));\n        const data = querySnapshot.docs.map(doc => doc.data());\n        setExpenses(data);\n      };\n      fetchData();\n    }, []);\n  \n    useEffect(() => {\n      // Calculate total expenses whenever expenses change\n      const total = expenses.reduce((acc, expense) => acc + expense.amount, 0);\n      setTotalExpenses(total);\n    }, [expenses]);\n  \n    const handleMonthChange = (e) => {\n      setSelectedMonth(e.target.value);\n    };\n  \n    const handleAddExpense = () => {\n      navigate(\"/add\");\n    };\n  \n    const data = [\n      [\"Expense\", \"Amount\", { role: \"style\" }],\n      ...expenses.map((expense, index) => {\n        const color = colors[expense.category] || \"gray\"; // Default color if category not found\n        return [expense.description, expense.amount, color];\n      }),\n    ];\n  \n    const options = {\n      title: selectedMonth,\n      pieHole: 0.4,\n      pieSliceText: \"label\",\n      legend: \"none\",\n      pieSliceTextStyle: {\n        color: \"black\",\n      },\n      pieStartAngle: 100,\n      tooltip: { trigger: \"none\" },\n      chartArea: {\n        left: \"5%\",\n        top: \"5%\",\n        width: \"90%\",\n        height: \"90%\",\n      },\n      slices: expenses.map((_, index) => ({ color: colors[expenses[index].category] || \"gray\" })),\n    };\n  \n    const monthOptions = months.map((month) => (\n      <option key={month} value={month}>{month}</option>\n    ));\n  \n    return (\n      <div>\n        <select value={selectedMonth} onChange={handleMonthChange}>\n          {monthOptions}\n        </select>\n        <button onClick={handleAddExpense}>Add Expense</button>\n        <Chart\n          chartType=\"PieChart\"\n          data={data}\n          options={options}\n          width={\"100%\"}\n          height={\"400px\"}\n        />\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            textAlign: \"center\",\n          }}\n        >\n          Total Expenses: {totalExpenses}\n        </div>\n      </div>\n    );\n  };\n  \n  export default HomePage;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}