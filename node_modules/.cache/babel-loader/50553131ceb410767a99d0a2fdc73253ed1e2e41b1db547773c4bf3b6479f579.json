{"ast":null,"code":"var _jsxFileName = \"/Users/faithzantua/cashtagram-web-app/src/ExpensesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesPage = () => {\n  _s();\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [yearlyData, setYearlyData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      // Fetch monthly data\n      const monthlySnapshot = await getDocs(collection(db, \"monthlyExpenses\"));\n      const monthlyExpenses = monthlySnapshot.docs.map(doc => doc.data());\n      setMonthlyData(monthlyExpenses);\n\n      // Fetch daily data\n      const dailySnapshot = await getDocs(collection(db, \"dailyExpenses\"));\n      const dailyExpenses = dailySnapshot.docs.map(doc => doc.data());\n      setDailyData(dailyExpenses);\n\n      // Fetch yearly data\n      const yearlySnapshot = await getDocs(collection(db, \"yearlyExpenses\"));\n      const yearlyExpenses = yearlySnapshot.docs.map(doc => doc.data());\n      setYearlyData(yearlyExpenses);\n    };\n    fetchData();\n  }, []);\n  const monthlyChartData = [[\"Month\", \"Total Expenses\"], ...monthlyData.map(data => [data.month, data.total])];\n  const dailyChartData = [[\"Date\", \"Total Expenses\"], ...dailyData.map(data => [data.date, data.total])];\n  const yearlyChartData = [[\"Year\", \"Total Expenses\"], ...yearlyData.map(data => [data.year, data.total])];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: \"LineChart\",\n      data: monthlyChartData,\n      options: {\n        title: \"Monthly Overview\"\n      },\n      width: \"100%\",\n      height: \"400px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: \"LineChart\",\n      data: dailyChartData,\n      options: {\n        title: \"Daily Overview\"\n      },\n      width: \"100%\",\n      height: \"400px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Yearly Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: \"LineChart\",\n      data: yearlyChartData,\n      options: {\n        title: \"Yearly Overview\"\n      },\n      width: \"100%\",\n      height: \"400px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpensesPage, \"yaTSeY3wefugzL7qtz18kas9VjM=\");\n_c = ExpensesPage;\nexport default ExpensesPage;\nvar _c;\n$RefreshReg$(_c, \"ExpensesPage\");","map":{"version":3,"names":["React","useState","useEffect","Chart","collection","getDocs","db","jsxDEV","_jsxDEV","ExpensesPage","_s","monthlyData","setMonthlyData","dailyData","setDailyData","yearlyData","setYearlyData","fetchData","monthlySnapshot","monthlyExpenses","docs","map","doc","data","dailySnapshot","dailyExpenses","yearlySnapshot","yearlyExpenses","monthlyChartData","month","total","dailyChartData","date","yearlyChartData","year","children","fileName","_jsxFileName","lineNumber","columnNumber","chartType","options","title","width","height","_c","$RefreshReg$"],"sources":["/Users/faithzantua/cashtagram-web-app/src/ExpensesPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\nconst ExpensesPage = () => {\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [yearlyData, setYearlyData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // Fetch monthly data\n      const monthlySnapshot = await getDocs(collection(db, \"monthlyExpenses\"));\n      const monthlyExpenses = monthlySnapshot.docs.map((doc) => doc.data());\n      setMonthlyData(monthlyExpenses);\n\n      // Fetch daily data\n      const dailySnapshot = await getDocs(collection(db, \"dailyExpenses\"));\n      const dailyExpenses = dailySnapshot.docs.map((doc) => doc.data());\n      setDailyData(dailyExpenses);\n\n      // Fetch yearly data\n      const yearlySnapshot = await getDocs(collection(db, \"yearlyExpenses\"));\n      const yearlyExpenses = yearlySnapshot.docs.map((doc) => doc.data());\n      setYearlyData(yearlyExpenses);\n    };\n    fetchData();\n  }, []);\n\n  const monthlyChartData = [\n    [\"Month\", \"Total Expenses\"],\n    ...monthlyData.map((data) => [data.month, data.total]),\n  ];\n\n  const dailyChartData = [\n    [\"Date\", \"Total Expenses\"],\n    ...dailyData.map((data) => [data.date, data.total]),\n  ];\n\n  const yearlyChartData = [\n    [\"Year\", \"Total Expenses\"],\n    ...yearlyData.map((data) => [data.year, data.total]),\n  ];\n\n  return (\n    <div>\n      <h2>Monthly Overview</h2>\n      <Chart\n        chartType=\"LineChart\"\n        data={monthlyChartData}\n        options={{ title: \"Monthly Overview\" }}\n        width=\"100%\"\n        height=\"400px\"\n      />\n      <h2>Daily Overview</h2>\n      <Chart\n        chartType=\"LineChart\"\n        data={dailyChartData}\n        options={{ title: \"Daily Overview\" }}\n        width=\"100%\"\n        height=\"400px\"\n      />\n      <h2>Yearly Overview</h2>\n      <Chart\n        chartType=\"LineChart\"\n        data={yearlyChartData}\n        options={{ title: \"Yearly Overview\" }}\n        width=\"100%\"\n        height=\"400px\"\n      />\n    </div>\n  );\n};\n\nexport default ExpensesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}