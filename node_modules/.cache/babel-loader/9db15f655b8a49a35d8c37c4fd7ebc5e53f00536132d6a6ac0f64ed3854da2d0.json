{"ast":null,"code":"var _jsxFileName = \"/Users/faithzantua/cashtagram-web-app/src/ExpensesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesPage = () => {\n  _s();\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [yearlyData, setYearlyData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      // Fetch monthly data\n      const monthlySnapshot = await getDocs(collection(db, \"monthlyExpenses\"));\n      const monthlyExpenses = monthlySnapshot.docs.map(doc => doc.data());\n      setMonthlyData(monthlyExpenses);\n\n      // Fetch daily data\n      const dailySnapshot = await getDocs(collection(db, \"dailyExpenses\"));\n      const dailyExpenses = dailySnapshot.docs.map(doc => doc.data());\n      setDailyData(dailyExpenses);\n\n      // Fetch yearly data\n      const yearlySnapshot = await getDocs(collection(db, \"yearlyExpenses\"));\n      const yearlyExpenses = yearlySnapshot.docs.map(doc => doc.data());\n      setYearlyData(yearlyExpenses);\n    };\n    fetchData();\n  }, []);\n  const formatMonthlyData = monthlyData.map(data => [new Date(data.month),\n  // Convert string date to Date object\n  data.total]);\n  const formatDailyData = dailyData.map(data => [new Date(data.date),\n  // Convert string date to Date object\n  data.total]);\n  const formatYearlyData = yearlyData.map(data => [data.year, data.total]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Monthly Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: \"LineChart\",\n      data: [[\"Date\", \"Total Expenses\"], ...formatMonthlyData],\n      options: {\n        title: \"Monthly Overview\"\n      },\n      width: \"100%\",\n      height: \"400px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: \"LineChart\",\n      data: [[\"Date\", \"Total Expenses\"], ...formatDailyData],\n      options: {\n        title: \"Daily Overview\"\n      },\n      width: \"100%\",\n      height: \"400px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Yearly Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: \"LineChart\",\n      data: [[\"Year\", \"Total Expenses\"], ...formatYearlyData],\n      options: {\n        title: \"Yearly Overview\"\n      },\n      width: \"100%\",\n      height: \"400px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpensesPage, \"yaTSeY3wefugzL7qtz18kas9VjM=\");\n_c = ExpensesPage;\nexport default ExpensesPage;\nvar _c;\n$RefreshReg$(_c, \"ExpensesPage\");","map":{"version":3,"names":["React","useState","useEffect","Chart","collection","getDocs","db","jsxDEV","_jsxDEV","ExpensesPage","_s","monthlyData","setMonthlyData","dailyData","setDailyData","yearlyData","setYearlyData","fetchData","monthlySnapshot","monthlyExpenses","docs","map","doc","data","dailySnapshot","dailyExpenses","yearlySnapshot","yearlyExpenses","formatMonthlyData","Date","month","total","formatDailyData","date","formatYearlyData","year","children","fileName","_jsxFileName","lineNumber","columnNumber","chartType","options","title","width","height","_c","$RefreshReg$"],"sources":["/Users/faithzantua/cashtagram-web-app/src/ExpensesPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from \"./firebase\";\n\nconst ExpensesPage = () => {\n  const [monthlyData, setMonthlyData] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [yearlyData, setYearlyData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // Fetch monthly data\n      const monthlySnapshot = await getDocs(collection(db, \"monthlyExpenses\"));\n      const monthlyExpenses = monthlySnapshot.docs.map((doc) => doc.data());\n      setMonthlyData(monthlyExpenses);\n\n      // Fetch daily data\n      const dailySnapshot = await getDocs(collection(db, \"dailyExpenses\"));\n      const dailyExpenses = dailySnapshot.docs.map((doc) => doc.data());\n      setDailyData(dailyExpenses);\n\n      // Fetch yearly data\n      const yearlySnapshot = await getDocs(collection(db, \"yearlyExpenses\"));\n      const yearlyExpenses = yearlySnapshot.docs.map((doc) => doc.data());\n      setYearlyData(yearlyExpenses);\n    };\n    fetchData();\n  }, []);\n\n  const formatMonthlyData = monthlyData.map((data) => [\n    new Date(data.month), // Convert string date to Date object\n    data.total,\n  ]);\n\n  const formatDailyData = dailyData.map((data) => [\n    new Date(data.date), // Convert string date to Date object\n    data.total,\n  ]);\n\n  const formatYearlyData = yearlyData.map((data) => [\n    data.year,\n    data.total,\n  ]);\n\n  return (\n    <div>\n      <h2>Monthly Overview</h2>\n      <Chart\n        chartType=\"LineChart\"\n        data={[[\"Date\", \"Total Expenses\"], ...formatMonthlyData]}\n        options={{ title: \"Monthly Overview\" }}\n        width=\"100%\"\n        height=\"400px\"\n      />\n      <h2>Daily Overview</h2>\n      <Chart\n        chartType=\"LineChart\"\n        data={[[\"Date\", \"Total Expenses\"], ...formatDailyData]}\n        options={{ title: \"Daily Overview\" }}\n        width=\"100%\"\n        height=\"400px\"\n      />\n      <h2>Yearly Overview</h2>\n      <Chart\n        chartType=\"LineChart\"\n        data={[[\"Year\", \"Total Expenses\"], ...formatYearlyData]}\n        options={{ title: \"Yearly Overview\" }}\n        width=\"100%\"\n        height=\"400px\"\n      />\n    </div>\n  );\n};\n\nexport default ExpensesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}